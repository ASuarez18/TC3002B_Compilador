0: inicio
1: inicio de variable
2: variable
3: asignación
4: entero
5: negativo
6: paréntesis apertura
7: paréntesis cierre
8: comentrario de una línea
9: resta
10: multiplicación
11: división
12: módulo
*No hay estado 12+1 para evitar el albur 
14: inicio de comentario
15: cierre de comentario
16: palabras reservadas
17: buleanos
18: cadena de texto
19: suma
20: positivo
21: negación
22: and
23: or
24: xor
25: caracteres


**** Array ****



# Structure
'''
- Alpha (A-Z,a-z)
- Digit  (0-9)
- Tokens
    - Identifiers <<1,2
        + Letters, digits, undersore (_)
        + Upper & Lower are different
    - Keywords <<16
        - break
        - if
        - elseif
        - else
        - dec
        - do
        - return
        - true
        - false
        - var
        - inc
        - while
    - Literals
        - Booleans <<17
            - true (1)
            - false (0)
        - Integers <<4
            + 0..n digits
            + Range = -2,147,483,648 to 2,147,483,647
        - Characters <<25
        - Strings <<18
    - Operators
        - Arithmetic
            - Minus (-)
                + -x (negate) <<5
                + x - y (substraction) <<9
            - Plus (+)
                - +x (Produces) <<20
                - x + y (Addition) <<19
            - Multiplication (x * y) <<10
            - Division (x / y) <<11
            - Remainder (x % y) <<12
        - Logical
            - Not (!x) <<21
            - And (x && y) <<22
            - Or (x || y) <<23
            - Xor (x ^ y) <<24
        - Comparison and Relational
            - Equal (x == y)
            - Not equal (x != y)
            - Greater (x > y)
            - Less (x < y)
            - Greater Equal (x >= y)
            - Less Equal (x <= y)
        - Function call (f(arg1,..., argn))


    - White space (Delimiters between tokens)
        - Spaces
        - Tabulators
        - Newlines
        - Comments
            - Single (#) <<8
            - Multi-line(<# #>) <<14, 15

'''
